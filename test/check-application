#!/usr/bin/python3
# Run this with --help to see available options for tracing and debugging
# See https://github.com/cockpit-project/cockpit/blob/master/test/common/testlib.py
# "class Browser" and "class MachineCase" for the available API.

import os
import sys

# import Cockpit's machinery for test VMs and its browser test API
TEST_DIR = os.path.dirname(__file__)
sys.path.append(os.path.join(TEST_DIR, "common"))
sys.path.append(os.path.join(os.path.dirname(TEST_DIR), "bots/machine"))
import testlib

# Unexpected journal messages:
# Error sending data: Connection reset by peer


class TestApplication(testlib.MachineCase):
    Test with pre-recorded journal with tlog UID 981
    def testPlayRecord(self):
        b = self.browser
        m = self.machine
        self.login_and_go("/session-recording")
        b.wait_present(".content-header-extra")
        b.eval_js('window.localStorage["test_journal_remote"] = "off"')
        #m.execute('sh /root/tlog_rec_session_test.sh')
        b.reload()
        b.enter_page("/session-recording")
        b.wait_present("#user")
        b.click(".listing-ct-item")
        b.wait_present("button.margin-right-btn:nth-child(3)")
        b.click("button.margin-right-btn:nth-child(3)")
        b.wait_timeout(15000)
        b.wait_present(".fa-pause")
        b.click("button.margin-right-btn:nth-child(3)")
        b.snapshot('play-default')
        m.execute('sdfgsdgsdgsdg')

    # Test with pre-recorded journal with tlog UID 981
    def testSkipFrameRecord(self):
        b = self.browser
        m = self.machine
        self.login_and_go("/session-recording")
        b.wait_present(".content-header-extra")
        b.eval_js('window.localStorage["test_journal_remote"] = "off"')
        # m.execute("useradd rhuser")
        m.execute("echo rhuser:1 | chpasswd")
        m.execute("echo /usr/bin/tlog-rec-session | chsh rhuser")
        m.execute('expect /root/ssh-login.sh 1 ssh rhuser@127.0.0.1 "echo test1; echo test2; exit"')
        m.execute('sdfgsdgsdgsdg')
        b.reload()
        b.enter_page("/session-recording")
        b.wait_present("#user")
        b.click(".listing-ct-item")
        b.wait_present("button.margin-right-btn:nth-child(3)")
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.snapshot('play-default')

    # Test with pre-recorded journal with tlog UID 981
    def testPlayDefault(self):
        b = self.browser
        m = self.machine
        m.execute("cp /root/1.journal /var/log/journal/")
        self.login_and_go("/session-recording")
        b.wait_present(".content-header-extra")
        b.wait_present("#user")
        b.click(".listing-ct-item")
        b.wait_present("button.margin-right-btn:nth-child(3)")
        b.click("button.margin-right-btn:nth-child(3)")
        b.wait_timeout(15000)
        b.wait_present(".fa-pause")
        b.click("button.margin-right-btn:nth-child(3)")
        b.snapshot('play-default')
        m.execute("rm -rf /var/log/journal/1.journal")

    # Test with pre-recorded journal with tlog UID 981
    def testSkipFrameDefault(self):
        b = self.browser
        m = self.machine
        m.execute("cp /root/1.journal /var/log/journal/")
        self.login_and_go("/session-recording")
        b.wait_present(".content-header-extra")
        b.wait_present("#user")
        b.click(".listing-ct-item")
        b.wait_present("button.margin-right-btn:nth-child(3)")
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.snapshot('play-default')
        m.execute("rm -rf /var/log/journal/1.journal")

    # Test changing journal directory
    def testPlay(self):
        b = self.browser
        m = self.machine
        self.login_and_go("/session-recording")
        b.wait_present(".content-header-extra")
        b.eval_js('window.localStorage["test_journal_remote"] = "on"')
        b.wait_present(".content-header-extra")
        b.reload()
        b.enter_page("/session-recording")
        b.wait_present(".content-header-extra")
        b.wait_present("#user")
        b.click("tr[data-row-id=89b6498ba561478d8d6570ba11574053-3700-39918]")
        b.wait_present("button.margin-right-btn:nth-child(3)")
        b.click("button.margin-right-btn:nth-child(3)")
        b.wait_timeout(15000)
        b.wait_present(".fa-pause")
        b.click("button.margin-right-btn:nth-child(3)")
        b.snapshot('play')

    # Test changing journal directory
    def testSkipFrame(self):
        b = self.browser
        m = self.machine
        self.login_and_go("/session-recording")
        b.wait_present(".content-header-extra")
        b.eval_js('window.localStorage["test_journal_remote"] = "on"')
        b.wait_present(".content-header-extra")
        b.reload()
        b.enter_page("/session-recording")
        b.wait_present(".content-header-extra")
        b.wait_present("#user")
        b.click("tr[data-row-id=89b6498ba561478d8d6570ba11574053-3700-39918]")
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.wait_present("button.margin-right-btn:nth-child(4)")
        b.click("button.margin-right-btn:nth-child(4)")
        b.wait_timeout(1000)
        b.attr(".slider-selection", 'style=[left: 0%; width: 4.91101%;]')
        b.snapshot('skip_frame')

if __name__ == '__main__':
    testlib.test_main()
